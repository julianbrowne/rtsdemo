//
//  make a capped collection
//
//  5000000 bytes is approx enough for 100k 50 byte docs
//  which is about the size of a demo doc
//

use rtsdemo

db.createCollection("statstore", { capped: true, size: 5000000 });

//
// save a document to the collection
//

db.statstore.save({ event: 'login', count: 5});

//
//  query with a tailable cursor
//

c = db.collection.find({}).addOption(2).addOption(32);

//
//  This queries, waits about 4 secs, and times out
//  so next step is to put cursor query into a loop
//

for(i=0;i<5;i++) {
      while(c.hasNext()) {
           var doc = c.next();
           printjson( doc );
      }
}

//
//  but loop would be poop for anything other than a demo
//  so next step is to move reader to something like node
//  though ruby or python would be just as simple
//

//
//  and finally the mongo shell writer to fill the collection
//  with random stuff. Issues 200k docs to loop at least once
//  through the collection. This could also be improved by
//  moving to ruby or python. Having the node server do the
//  writes (and reads) would just be odd.
//

var events = [ 'login', 'logout', 'home-page', 'prod-page', 'feedback', 'ad-click' ]

function random(max) { return Math.floor(Math.random() * max) + 1; }

for(i=0; i<200000; i++) { db.statstore.save({event: events[random(events.length)-1], count: random(5) }) }

